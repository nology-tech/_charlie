[{"/Users/reshmydevaraju/Development/_charlie/src/index.js":"1","/Users/reshmydevaraju/Development/_charlie/src/App.jsx":"2","/Users/reshmydevaraju/Development/_charlie/src/reportWebVitals.js":"3","/Users/reshmydevaraju/Development/_charlie/src/pages/dashboard/dashboard.jsx":"4","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/studentsprojectsindex.jsx":"5","/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-add/addstudent.jsx":"6","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/review/projectreview.jsx":"7","/Users/reshmydevaraju/Development/_charlie/src/pages/settings/settings.jsx":"8","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/students-list.jsx":"9","/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-list/projects-list.jsx":"10","/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-create/projects-create.jsx":"11","/Users/reshmydevaraju/Development/_charlie/src/components/navbar/navbar.jsx":"12","/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-details/student-details.jsx":"13","/Users/reshmydevaraju/Development/_charlie/src/data/students.js":"14","/Users/reshmydevaraju/Development/_charlie/src/data/projects.js":"15","/Users/reshmydevaraju/Development/_charlie/src/data/projectsData.js":"16","/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-add/addstudenttopnav/addstudenttopnav.jsx":"17","/Users/reshmydevaraju/Development/_charlie/src/components/cards/cards.jsx":"18","/Users/reshmydevaraju/Development/_charlie/src/components/cards/card/card.jsx":"19","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/review/projectreviewtopnav/projectreviewtopnav.jsx":"20","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/review/projectreviewform/projectreviewform.jsx":"21","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/student-table/student-table.jsx":"22","/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-create/projects-form/projects-form.jsx":"23","/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-add/studentform/studentform.jsx":"24","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/student-searchbar/student-searchbar.jsx":"25","/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-list/project-table/project-table.jsx":"26","/Users/reshmydevaraju/Development/_charlie/src/components/star/star.jsx":"27","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/student-table/student-table-row/student-table-row.jsx":"28","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/page-navigator/page-navigator.jsx":"29","/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-list/project-table/project-table-row/project-table-row.jsx":"30","/Users/reshmydevaraju/Development/_charlie/src/pages/reviews/reviews.jsx":"31","/Users/reshmydevaraju/Development/_charlie/src/components/page-header/page-header.jsx":"32","/Users/reshmydevaraju/Development/_charlie/src/components/rows/row.jsx":"33"},{"size":504,"mtime":1634044733153,"results":"34","hashOfConfig":"35"},{"size":2119,"mtime":1634051918922,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1634044733178,"results":"37","hashOfConfig":"35"},{"size":644,"mtime":1634046406596,"results":"38","hashOfConfig":"35"},{"size":6999,"mtime":1634046406612,"results":"39","hashOfConfig":"35"},{"size":366,"mtime":1634044733166,"results":"40","hashOfConfig":"35"},{"size":869,"mtime":1634053509579,"results":"41","hashOfConfig":"35"},{"size":140,"mtime":1634044733164,"results":"42","hashOfConfig":"35"},{"size":7724,"mtime":1634051918932,"results":"43","hashOfConfig":"35"},{"size":2310,"mtime":1634051918930,"results":"44","hashOfConfig":"35"},{"size":803,"mtime":1634051918929,"results":"45","hashOfConfig":"35"},{"size":1654,"mtime":1634046406593,"results":"46","hashOfConfig":"35"},{"size":540,"mtime":1634046406606,"results":"47","hashOfConfig":"35"},{"size":8441,"mtime":1634046406596,"results":"48","hashOfConfig":"35"},{"size":1345,"mtime":1634046406595,"results":"49","hashOfConfig":"35"},{"size":1461,"mtime":1634046406595,"results":"50","hashOfConfig":"35"},{"size":1055,"mtime":1634054447581,"results":"51","hashOfConfig":"35"},{"size":489,"mtime":1634046406592,"results":"52","hashOfConfig":"35"},{"size":1116,"mtime":1634054515114,"results":"53","hashOfConfig":"35"},{"size":1523,"mtime":1634054161553,"results":"54","hashOfConfig":"35"},{"size":3936,"mtime":1634052507629,"results":"55","hashOfConfig":"35"},{"size":1925,"mtime":1634046406609,"results":"56","hashOfConfig":"35"},{"size":6936,"mtime":1634046406599,"results":"57","hashOfConfig":"35"},{"size":6130,"mtime":1634051762094,"results":"58","hashOfConfig":"35"},{"size":2472,"mtime":1634046406608,"results":"59","hashOfConfig":"35"},{"size":966,"mtime":1634046406601,"results":"60","hashOfConfig":"35"},{"size":902,"mtime":1634044733151,"results":"61","hashOfConfig":"35"},{"size":1290,"mtime":1634054515115,"results":"62","hashOfConfig":"35"},{"size":2020,"mtime":1634046406607,"results":"63","hashOfConfig":"35"},{"size":691,"mtime":1634051918929,"results":"64","hashOfConfig":"35"},{"size":121,"mtime":1634046406604,"results":"65","hashOfConfig":"35"},{"size":1127,"mtime":1634051918923,"results":"66","hashOfConfig":"35"},{"size":1112,"mtime":1634051918925,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"v5v6ne",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},"/Users/reshmydevaraju/Development/_charlie/src/index.js",[],["143","144"],"/Users/reshmydevaraju/Development/_charlie/src/App.jsx",["145"],"import './App.scss';\n\nimport Navbar from \"./components/navbar/navbar\";\nimport ProjectReview from \"./pages/students/students-projects-index/review/projectreview\";\n\nimport Reviews from \"./pages/reviews/reviews\";\n\nimport SubmissionDetails from \"./pages/students/students-projects-index/studentsprojectsindex\";\nimport Settings from \"./pages/settings/settings\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Students from \"./pages/students/students-list/students-list\";\nimport StudentDetails from './pages/students/student-details/student-details';\nimport AddStudent from './pages/students/student-add/addstudent';\nimport ProjectList from './pages/projects/projects-list/projects-list';\nimport ProjectCreate from './pages/projects/projects-create/projects-create';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <div className=\"col\">\n          <Navbar />\n        </div>\n        \n        <div className=\"col\">\n          <Switch>\n                        \n            <Route path=\"/projects\">\n              <ProjectList></ProjectList>\n            </Route>\n\n\n            <Route path=\"/project/create\">\n              <ProjectCreate></ProjectCreate>\n            </Route>\n\n\n            <Route path=\"/reviews\">\n              <Reviews />\n            </Route>\n\n            \n            <Route path=\"/settings\">\n              <Settings />\n            </Route>\n\n\n            <Route exact path=\"/student/:studentId/project/:projectId/review\">\n              <ProjectReview />\n            </Route>\n\n            <Route path=\"/student/:studentId/project/:projectId\">\n              <SubmissionDetails />\n            </Route>\n\n            <Route path=\"/student/create\">\n              <AddStudent></AddStudent>\n            </Route>\n            \n            {/* <Route path=\"/student/:studentId/project/:projectId\">\n              <StudentDetails></StudentDetails>\n            </Route> */}\n\n            <Route path={[\"/students\", \"/\"]}>\n              <Students />\n            </Route>\n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/reshmydevaraju/Development/_charlie/src/reportWebVitals.js",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/dashboard/dashboard.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/studentsprojectsindex.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-add/addstudent.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/review/projectreview.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/settings/settings.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/students-list.jsx",["146"],"import React,{useEffect, useState }  from 'react'\nimport StudentTable from \"./student-table/student-table\";\nimport StudentSearchBar from './student-searchbar/student-searchbar';\nimport \"./students-list.scss\"; \nimport Data from \"../../../data/students.js\"; \nimport PageHeader from \"../../../components/page-header/page-header\";\n\nconst StudentsList = () => {\n    const [studentsData, setStudentsData] = useState([]); \n    const [pageData, setPageData] = useState([]);\n    const [pageNumber, setPageNumber] = useState(1);  \n    const [numberOfRows, setNumberOfRows] = useState(8); \n    const [totalNumberStudents, setTotalNumberStudents] = useState(studentsData.length); \n    const [enrolledFilter, setEnrolledFilter] = useState(\"All\");\n    const [toggleView, setToggleView] = useState(false); \n    const [enrollmentData, setEnrollmentData] = useState(Data); \n    const [sortOption, setSortOption] = useState(\"1\");\n    const [filterOption, setFilterOption] = useState(\"1\");\n\n    const fetchStudentData = () => {\n        setStudentsData(Data.sort((a,b) => a.studentName.localeCompare(b.studentName)));\n    }\n    const changeToGridView =() => {\n        setToggleView(true);\n        setPageNumber(1);\n    }\n    const changeToBurgerView = () => {\n        setToggleView(false);\n        setPageNumber(1);\n    }\n    const changeNumberOfRows = (e) => {\n        setPageNumber(1);\n        setNumberOfRows(e.target.value);\n    }\n    const displayStudents = () => {\n        const firstSliceIndex = numberOfRows*pageNumber-numberOfRows;\n        const secondSliceIndex = numberOfRows*pageNumber;\n        setPageData(studentsData.slice((firstSliceIndex), (secondSliceIndex)));\n        setTotalNumberStudents(studentsData.length); \n    }\n    const switchToNextPage = () => {\n        let newPageNumber = pageNumber+1;\n        if(newPageNumber-1 !== Math.ceil(totalNumberStudents/numberOfRows)){\n            setPageNumber(newPageNumber);\n            displayStudents(newPageNumber);\n        }   \n    }\n    const switchToPreviousPage = () => {\n        const newPageNumber= pageNumber-1;\n        if(newPageNumber!==0){\n            setPageNumber(newPageNumber)\n            displayStudents(newPageNumber);\n        }\n    }\n   \n\n    const filterDataByTabs = (enrolledType) => {\n        if (enrolledType == \"All\") {\n            setSortOption(\"1\");\n            setFilterOption(\"1\");\n            setPageNumber(1);\n            setEnrolledFilter(\"All\");\n            fetchStudentData();\n            setEnrollmentData(Data);\n        } else {\n            setSortOption(\"1\");\n            setFilterOption(\"1\");\n            setPageNumber(1);\n            setEnrolledFilter(enrolledType);\n            setStudentsData(Data.filter(student => student.enrolledType.includes(enrolledType)));\n            setEnrollmentData(Data.filter(student => student.enrolledType.includes(enrolledType)));\n        }  \n        }   \n\n    const generateSearchResults = (e) => { \n        if (e.target.value){\n            setPageNumber(1); \n        const filteredData = enrollmentData.filter(student=> {\n            return (\n            student.studentName.toLowerCase().includes(e.target.value.toLowerCase()) ||\n            student.enrolledOn.toLowerCase().includes(e.target.value.toLowerCase()) ||\n            student.githubAccount.toLowerCase().includes(e.target.value.toLowerCase()) ||\n            student.portfolio.toLowerCase().includes(e.target.value.toLowerCase()));\n        }) \n        setStudentsData(filteredData); \n    } else {\n        switch(enrolledFilter) {\n            case \"All\":\n                filterDataByTabs(\"All\")\n                break;\n            case \"Self-Paced\":\n                filterDataByTabs(\"Self-Paced\")\n                break;\n            case \"Full-Time\":\n                filterDataByTabs(\"Full-Time\")\n                break;\n            case \"Corporate\":\n                filterDataByTabs(\"Corporate\")\n                break;\n            default:\n                filterDataByTabs(\"All\") \n        }\n    }\n};\n\n// Sorting logic (A-Z, Z-A) - THIS NEEDS FIXING // needs fixing man-0--\n    const sortStudents = (e) => {\n        if(e.target.value === \"1\"){\n            setSortOption(\"1\");\n            const studentCopy = [...studentsData];\n            studentCopy.sort((a, b)=> a.studentName.localeCompare(b.studentName))\n            setStudentsData(studentCopy);\n        }else if (e.target.value === \"2\"){\n            setSortOption(\"2\");\n            const studentCopy = [...studentsData];\n            studentCopy.sort((a, b)=> a.studentName.localeCompare(b.studentName)).reverse()\n            setStudentsData(studentCopy);\n        }\n    }\n\n    const filterStudentsByCourse = (e) => {\n        if (e.target.value === \"1\") {\n            setFilterOption(\"1\");\n            setStudentsData(enrollmentData)\n        }else if (e.target.value === \"2\") {\n            setFilterOption(\"2\");\n            setStudentsData((enrollmentData.filter(student => student.enrolledOn.includes(\"Mariana\"))));\n        }else if (e.target.value === \"3\") {\n            setFilterOption(\"3\");\n            setStudentsData((enrollmentData.filter(student => student.enrolledOn.includes(\"Ibiza\"))));\n        }else if (e.target.value === \"4\") {\n            setFilterOption(\"4\");\n            setStudentsData((enrollmentData.filter(student => student.enrolledOn.includes(\"Jersey\"))));\n        } else {\n            setFilterOption(\"5\");\n            setStudentsData((enrollmentData.filter(student => student.enrolledOn.includes(\"Hawaii\"))));\n        }\n    }\n\n    // useEffect Calls\n\n    useEffect(fetchStudentData, []); \n    useEffect(displayStudents, [studentsData, pageNumber, numberOfRows]);\n    \n    // The following logic is for the row selection portion of the PageNavigator component. It is placed here as PageNavigator is a presentational component. \n\n    const firstIndex = numberOfRows*pageNumber-numberOfRows;\n    let secondIndex;\n    pageData.length < numberOfRows ? secondIndex = pageData.length + firstIndex : secondIndex = numberOfRows*pageNumber;\n    \n    return (\n        <div className=\"main m-0 d-flex justify-content-between\">\n            <div className=\"students__white-space\"></div>\n                <div className=\"students d-flex flex-column align-items-center p-0 \">\n                    <PageHeader title=\"Students\"\n                    tabs={['All', 'Full-Time', 'Self-Paced', 'Corporate']} handleClick={filterDataByTabs} \n                    buttonPath={\"/student/create\"} \n                    filterState = {enrolledFilter} \n                    buttonText = {\"+ Create\"} \n                    buttonStyle = \"btn-primary top-nav__header-button border-0 me-2\"/>\n                    <StudentSearchBar \n                    generateSearchResults={generateSearchResults} \n                    sortStudents={sortStudents}\n                    changeToGridView={changeToGridView}\n                    changeToBurgerView={changeToBurgerView}\n                    sortOption={sortOption}\n                    filterStudentsByCourse={filterStudentsByCourse}\n                    filterOption={filterOption}/>\n                    <StudentTable \n                    studentsData={studentsData} \n                    pageData={pageData}\n                    toggleView={toggleView}\n                    totalNumberStudents={totalNumberStudents}\n                    switchToPreviousPage={switchToPreviousPage}\n                    switchToNextPage={switchToNextPage}\n                    changeNumberOfRows = {changeNumberOfRows}\n                    numberOfRows={numberOfRows}\n                    firstIndex={firstIndex}\n                    secondIndex={secondIndex}/>\n                </div>\n            <div className=\"students__white-space\"></div>\n        </div>\n    )\n}\nexport default StudentsList; \n","/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-list/projects-list.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-create/projects-create.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/components/navbar/navbar.jsx",["147"],"import \"./navbar.scss\";\r\n\r\nimport Logo from \"../../assets/images/Logo.png\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { FaHome, FaFileAlt, FaUsers, FaAward, FaCog } from 'react-icons/fa';\r\n\r\nconst Navbar = () => {\r\n    const navItems = [\r\n        {link: \"/\", text: \"Students\", icon: <FaFileAlt />},\r\n        {link: \"/projects\", text: \"Projects\", icon: <FaUsers />},\r\n        {link: \"/reviews\", text: \"Reviews\", icon: <FaAward/>}\r\n    ];\r\n    \r\n    // using Navlink in order to add an active class for the current page\r\n    const mappedNavItems = navItems.map(({ link, text, icon }, index) => {\r\n        return (\r\n            <NavLink exact to={link} activeClassName=\"active\" className=\"navbar__link\" key={index}>\r\n                <span className=\"navbar__link-icon\">\r\n                    {icon}\r\n                </span>\r\n                <span className=\"navbar__link-text\">\r\n                    {text}\r\n                </span>\r\n            </NavLink>\r\n\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div className=\"navbar\" >\r\n            <Link to=\"/\" className=\"navbar__link-logo\" >\r\n                <img src={Logo} alt=\"logo\"  />\r\n            </Link>\r\n            <hr />\r\n\r\n            {mappedNavItems}\r\n\r\n            <hr />\r\n            <NavLink exact to=\"/settings\" activeClassName=\"active\" className=\"navbar__settings navbar__link\">\r\n                <span className=\"navbar__link-icon\">\r\n                    <FaCog />\r\n                </span>\r\n                <span className=\"navbar__link-text\">\r\n                    Settings\r\n                </span>\r\n            </NavLink>\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default Navbar;","/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-details/student-details.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/data/students.js",[],"/Users/reshmydevaraju/Development/_charlie/src/data/projects.js",[],"/Users/reshmydevaraju/Development/_charlie/src/data/projectsData.js",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-add/addstudenttopnav/addstudenttopnav.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/components/cards/cards.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/components/cards/card/card.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/review/projectreviewtopnav/projectreviewtopnav.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-projects-index/review/projectreviewform/projectreviewform.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/student-table/student-table.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-create/projects-form/projects-form.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/student-add/studentform/studentform.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/student-searchbar/student-searchbar.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-list/project-table/project-table.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/components/star/star.jsx",["148"],"import './star.scss';\nimport { FaStar } from 'react-icons/fa';\nimport { useState } from 'react';\n\nconst Star = () => {\n  // const [currentValue, setCurrentValue] = useState(0);\n  // const [hoverValue, setHoverValue] = useState(undefined);\n\n  // const handleClick = value => {\n  //   setCurrentValue(value);\n  // }\n\n  // const handleMouseOver = value => {\n  //   setHoverValue(value);\n  // }\n\n  // const handleMouseLeave = () => {\n  //   setHoverValue(undefined);\n  // }\n\n  const stars = [ <FaStar />, <FaStar />, <FaStar />, <FaStar />, <FaStar />];\n  // const mappedStars = stars.map((elem , index) => (\n  //   <FaStar key={index} onClick={handleClick(index + 1)} onMouseOver={handleMouseOver(index+1)} onMouseLeave={handleMouseLeave}\n  //   color={(hoverValue || currentValue) > index ? \"violet\" : \"white\"} />\n  // ))              \n  \n  return (\n    <>\n    {stars}\n    </>\n  )\n}\n\nexport default Star;",["149","150"],"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/student-table/student-table-row/student-table-row.jsx",["151","152"],"import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport \"./student-table-row.scss\";\nimport StudentRight from \"../../../../../assets/images/studentRight.png\";\nimport Adobe from \"../../../../../assets/images/adobe.png\";\nimport Row from \"../../../../../components/rows/row\"\n\nconst StudentTableRow = (props) => {\n  const { studentName, enrolledOn, githubAccount, portfolio, pictureLink } = props.student; \n  const { toggleView, id } = props; \n  if (toggleView === false) {\n  return (\n    <div className=\"student row d-flex align-items-center text-center\" data-testid=\"student\">\n      <Row\n      one = {studentName}\n      two = {enrolledOn}\n      three={githubAccount}\n      four= {portfolio}\n      Adobe = {Adobe}\n      rightLink = {`/student/${id}/project/0`}\n      testid={\"student\"}\n      />\n    </div>\n  )\n} else if (toggleView === true) {\n  return (\n    <div className=\"student-grid\">\n      <div className=\"student-grid__card d-flex justify-content-around align-items-center flex-column\">\n        <img className=\"student-grid__card__img\" src={pictureLink} alt=\"student\"/>\n        <p className=\"student-grid__card__name\">{studentName}</p>\n        <p className=\"student-grid__card__email\">{portfolio}</p>\n      </div> \n    </div>  \n  )\n}\n}\n\n\nexport default StudentTableRow\n","/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/page-navigator/page-navigator.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/pages/projects/projects-list/project-table/project-table-row/project-table-row.jsx",["153","154"],"import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport \"./project-table-row.scss\";\nimport StudentRight from \"../../../../../assets/images/studentRight.png\";\nimport Row from \"../../../../../components/rows/row\"\n\nconst ProjectTableRow = (props) => {\n  const { projectName, language, studentsEnrolled, numberReviewed, percentageReviewed} = props.project; \n  return (\n    <div className=\"student row d-flex align-items-center text-center\" data-testid=\"project\">\n      <Row\n      one = {projectName}\n      two = {language}\n      three = {studentsEnrolled}\n      four = {numberReviewed}\n      five ={percentageReviewed}\n      />\n    </div>\n  )\n}\n\nexport default ProjectTableRow\n","/Users/reshmydevaraju/Development/_charlie/src/pages/reviews/reviews.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/components/page-header/page-header.jsx",[],"/Users/reshmydevaraju/Development/_charlie/src/components/rows/row.jsx",["155","156","157"],"import React from 'react'\nimport \"./row.scss\"\nimport Right from \"../../assets/images/right.png\";\nimport { Link } from 'react-router-dom';\n\nconst row = (props) => {\n\n    const {one, two, three, threeRating, four, fourRating, five, fiveRating, Adobe, rightLink} = props\n    \n    return (\n            <>\n                <p className=\"col container__property container__name\">{one}</p>\n                <p className=\"col container__property\">{two}</p>\n\n                <p className=\"col container__property\">{three}</p>\n                <p className=\"col container__property\">{four}</p>\n                {Adobe && <a className=\"col student__property\" href =\"sample.pdf\" download> <img className=\"adobe\" src={Adobe} alt=\"Adobe\"/> </a>}\n                {five && <p className=\"col container__property\">{five}</p>}\n                <div className=\"col-1 container__property container__right-arrow\">\n                <Link to={rightLink}>\n                    <img className=\"container__right-arrow__icon\" src={Right} alt={Right}/>\n                </Link>    \n                </div>\n            </>\n    )\n}\n\n\nexport default row",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":14,"column":8,"nodeType":"164","messageId":"165","endLine":14,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":58,"column":26,"nodeType":"168","messageId":"169","endLine":58,"endColumn":28},{"ruleId":"162","severity":1,"message":"170","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":16},{"ruleId":"162","severity":1,"message":"171","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":18},{"ruleId":"158","replacedBy":"172"},{"ruleId":"160","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"175","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":20},{"ruleId":"162","severity":1,"message":"174","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"175","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":20},{"ruleId":"162","severity":1,"message":"176","line":8,"column":29,"nodeType":"164","messageId":"165","endLine":8,"endColumn":40},{"ruleId":"162","severity":1,"message":"177","line":8,"column":48,"nodeType":"164","messageId":"165","endLine":8,"endColumn":58},{"ruleId":"162","severity":1,"message":"178","line":8,"column":66,"nodeType":"164","messageId":"165","endLine":8,"endColumn":76},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'StudentDetails' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaHome' is defined but never used.","'useState' is defined but never used.",["179"],["180"],"'Link' is defined but never used.","'StudentRight' is defined but never used.","'threeRating' is assigned a value but never used.","'fourRating' is assigned a value but never used.","'fiveRating' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]