{"ast":null,"code":"var _jsxFileName = \"/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/students.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StudentsTopNav from \"./studentstopnav/studentstopnav\";\nimport StudentTable from \"./student-table/student-table\";\nimport StudentSearchBar from './studentsearchbar/studentsearchbar';\nimport PageNavigator from './pagenavigator/pagenavigator';\nimport \"./students.scss\";\nimport Data from \"../../../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Students = () => {\n  _s();\n\n  const [studentsData, setStudentsData] = useState([]);\n  const [pageData, setPageData] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [numberOfRows, setNumberOfRows] = useState(9);\n  const [totalNumberStudents, setTotalNumberStudents] = useState(studentsData.length);\n\n  const fetchStudentData = () => {\n    setStudentsData(Data);\n  };\n\n  const changeNumberOfRows = e => {\n    setNumberOfRows(e.target.value);\n  };\n\n  const displayStudents = () => {\n    const firstSliceIndex = numberOfRows * pageNumber - numberOfRows;\n    const secondSliceIndex = numberOfRows * pageNumber;\n    setPageData(studentsData.slice(firstSliceIndex, secondSliceIndex));\n    setTotalNumberStudents(studentsData.length);\n  };\n\n  const switchToNextPage = () => {\n    const newPageNumber = pageNumber + 1;\n\n    if (newPageNumber - 1 !== totalNumberStudents / numberOfRows) {\n      setPageNumber(newPageNumber);\n      displayStudents(newPageNumber);\n    }\n  };\n\n  const switchToPreviousPage = () => {\n    const newPageNumber = pageNumber - 1;\n\n    if (newPageNumber !== 0) {\n      setPageNumber(newPageNumber);\n      displayStudents(newPageNumber);\n    }\n  };\n\n  const generateSearchResults = e => {\n    if (e.target.value) {\n      setPageNumber(1);\n      const filteredData = Data.filter(student => {\n        return student.studentName.toLowerCase().includes(e.target.value.toLowerCase()) || student.enrolledOn.toLowerCase().includes(e.target.value.toLowerCase()) || student.githubAccount.toLowerCase().includes(e.target.value.toLowerCase()) || student.portfolio.toLowerCase().includes(e.target.value.toLowerCase());\n      });\n      setStudentsData(filteredData);\n    } else {\n      fetchStudentData();\n    }\n\n    ;\n  };\n\n  useEffect(fetchStudentData, []);\n  useEffect(displayStudents, [studentsData, pageNumber, numberOfRows]); // The following logic is for the row selection portion of the PageNavigator component. Placed here as PageNavigator is a presentational component. \n\n  const firstIndex = numberOfRows * pageNumber - numberOfRows;\n  let secondIndex;\n  pageData.length < numberOfRows ? secondIndex = pageData.length + firstIndex : secondIndex = numberOfRows * pageNumber;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"students d-flex flex-column align-items-center p-3\",\n    children: [/*#__PURE__*/_jsxDEV(StudentsTopNav, {\n      className: \"students__topNav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StudentSearchBar, {\n      generateSearchResults: generateSearchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StudentTable, {\n      className: \"students__list d-flex justify-content-start\",\n      studentsData: studentsData,\n      pageData: pageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageNavigator, {\n      totalNumberStudents: totalNumberStudents,\n      switchToPreviousPage: switchToPreviousPage,\n      switchToNextPage: switchToNextPage,\n      changeNumberOfRows: changeNumberOfRows,\n      numberOfRows: numberOfRows,\n      firstIndex: firstIndex,\n      secondIndex: secondIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Students, \"5TwJLI6LkNQN5yoR3fE2dj3nWs4=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["/Users/reshmydevaraju/Development/_charlie/src/pages/students/students-list/students.jsx"],"names":["React","useEffect","useState","StudentsTopNav","StudentTable","StudentSearchBar","PageNavigator","Data","Students","studentsData","setStudentsData","pageData","setPageData","pageNumber","setPageNumber","numberOfRows","setNumberOfRows","totalNumberStudents","setTotalNumberStudents","length","fetchStudentData","changeNumberOfRows","e","target","value","displayStudents","firstSliceIndex","secondSliceIndex","slice","switchToNextPage","newPageNumber","switchToPreviousPage","generateSearchResults","filteredData","filter","student","studentName","toLowerCase","includes","enrolledOn","githubAccount","portfolio","firstIndex","secondIndex"],"mappings":"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","sourcesContent":["import React,{useEffect, useState}  from 'react'\nimport StudentsTopNav from \"./studentstopnav/studentstopnav\"\nimport StudentTable from \"./student-table/student-table\";\nimport StudentSearchBar from './studentsearchbar/studentsearchbar';\nimport PageNavigator from './pagenavigator/pagenavigator';\nimport \"./students.scss\"; \nimport Data from \"../../../data/data\"; \n\nconst Students = () => {\n    const [studentsData, setStudentsData] = useState([]); \n    const [pageData, setPageData] = useState([]);\n    const [pageNumber, setPageNumber] = useState(1);  \n    const [numberOfRows, setNumberOfRows] = useState(9); \n    const [totalNumberStudents, setTotalNumberStudents] = useState(studentsData.length); \n\n    const fetchStudentData = () => {\n        setStudentsData(Data);\n    }\n\n    const changeNumberOfRows = (e) => {\n        setNumberOfRows(e.target.value);\n    }\n    const displayStudents = () => {\n        const firstSliceIndex = numberOfRows*pageNumber-numberOfRows;\n        const secondSliceIndex = numberOfRows*pageNumber;\n        setPageData(studentsData.slice((firstSliceIndex), (secondSliceIndex)));\n        setTotalNumberStudents(studentsData.length); \n    }\n\n\n    const switchToNextPage = () => {\n        const newPageNumber = pageNumber+1;\n        if(newPageNumber-1 !== totalNumberStudents/numberOfRows){\n            setPageNumber(newPageNumber);\n            displayStudents(newPageNumber);\n        }   \n    }\n\n    const switchToPreviousPage = () => {\n        const newPageNumber= pageNumber-1;\n        if(newPageNumber!==0){\n            setPageNumber(newPageNumber)\n            displayStudents(newPageNumber);\n        }\n    }\n\n    const generateSearchResults = (e) => { \n        if (e.target.value) {\n            setPageNumber(1); \n        const filteredData = Data.filter(student=> {\n            return (\n            student.studentName.toLowerCase().includes(e.target.value.toLowerCase()) ||\n            student.enrolledOn.toLowerCase().includes(e.target.value.toLowerCase()) ||\n            student.githubAccount.toLowerCase().includes(e.target.value.toLowerCase()) ||\n            student.portfolio.toLowerCase().includes(e.target.value.toLowerCase()));\n        }) \n        setStudentsData(filteredData); \n    } else {\n        fetchStudentData();  \n    };\n};\n        \n\n    useEffect(fetchStudentData, []); \n    useEffect(displayStudents, [studentsData, pageNumber, numberOfRows]); \n\n    // The following logic is for the row selection portion of the PageNavigator component. Placed here as PageNavigator is a presentational component. \n    const firstIndex = numberOfRows*pageNumber-numberOfRows;\n    let secondIndex;\n    pageData.length < numberOfRows ? secondIndex = pageData.length + firstIndex : secondIndex = numberOfRows*pageNumber;\n    \n    return (\n        <div className=\"students d-flex flex-column align-items-center p-3\">\n            <StudentsTopNav className=\"students__topNav\"/>\n            <StudentSearchBar generateSearchResults={generateSearchResults}/>\n            <StudentTable className=\"students__list d-flex justify-content-start\" studentsData={studentsData} pageData={pageData} />\n            <PageNavigator totalNumberStudents={totalNumberStudents} \n            switchToPreviousPage={switchToPreviousPage} \n            switchToNextPage={switchToNextPage} changeNumberOfRows={changeNumberOfRows} numberOfRows={numberOfRows} firstIndex={firstIndex} secondIndex={secondIndex}/>\n        </div>\n    )\n}\n\nexport default Students;\n"]},"metadata":{},"sourceType":"module"}